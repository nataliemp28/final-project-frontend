"use strict";function Auth(e,t){e.loginUrl=t+"/login",e.signupUrl=t+"/register",e.tokenPrefix=""}function RegisterController(e,t){function r(){e.signup(o.user).then(function(){t.go("login")})}var o=this;o.user={},o.submit=r}function LoginController(e,t){function r(){e.login(o.credentials).then(function(){t.go("itemsIndex")})}var o=this;o.credentials={},o.submit=r}function Item(e,t){return new e(t+"/items/:id",{id:"@_id"},{update:{method:"PUT"}})}function ItemsIndexController(e){var t=this;t.all=e.query()}function ItemsShowController(e,t,r,o,l){function n(){return r.getPayload().id===parseFloat(t.params.id)}function s(e){u.newSwap.offer_id=e}function i(){l.save(u.newSwap,function(e){console.log("saved:",e)})}function a(){u.item.$remove(function(){t.go("itemsIndex")})}var u=this,m=r.getPayload().id;u.isCurrentUser=n,u.item=e.get(t.params),u.user=o.get({id:m}),e.get(t.params).$promise.then(function(e){u.item=e,u.newSwap={request_id:u.item.id,offer_id:null,accepted:!1}}),u.selectOffer=s,u.createSwap=i,u.delete=a,u.isLoggedIn=r.isAuthenticated}function ItemsEditController(e,t){function r(){o.item.$update(function(){t.go("itemsShow",t.params)})}var o=this;o.item=e.get(t.params),this.update=r}function MainController(e,t,r){function o(){e.logout().then(function(){t.go("home")})}function l(r,o,l){(!e.isAuthenticated()&&s.includes(o.name)||"usersEdit"===o.name&&parseFloat(l.id)!==e.getPayload().id)&&(r.preventDefault(),t.go("home"))}var n=this;n.isLoggedIn=e.isAuthenticated,n.message=null;var s=["usersEdit"];r.$on("$stateChangeStart",l),n.logout=o}function Router(e,t,r){r.html5Mode(!0),e.state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("usersShow",{url:"/user/:id",templateUrl:"/templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("itemsIndex",{url:"/items",templateUrl:"/templates/itemsIndex.html",controller:"ItemsIndexController as itemsIndex"}).state("itemsShow",{url:"/item/:id",templateUrl:"/templates/itemsShow.html",controller:"ItemsShowController as itemsShow"}).state("itemsEdit",{url:"/items/:id/edit",templateUrl:"/templates/itemsEdit.html",controller:"ItemsEditController as itemsEdit"}).state("home",{url:"/",templateUrl:"/templates/home.html"}).state("requestsOffers",{url:"/requestsOffers",templateUrl:"/templates/requestsOffers.html",controller:"RequestsOffersController as requestsOffers"}),t.otherwise("/")}function Swap(e,t){return new e(t+"/swaps/:id",{id:"@_id"},{update:{method:"PUT"}})}function User(e,t){return new e(t+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}function UsersIndexController(e){var t=this;t.all=e.query()}function UsersShowController(e,t,r){function o(){return r.getPayload().id===parseFloat(t.params.id)}function l(){n.user.$remove(function(){t.go("usersIndex")})}var n=this;n.user=e.get(t.params),n.isCurrentUser=o,n.user=e.get(t.params),n.delete=l,n.isLoggedIn=r.isAuthenticated}function UsersEditController(e,t){function r(){o.user.$update(function(){t.go("usersShow",t.params)})}var o=this;o.user=e.get(t.params),this.update=r}angular.module("finalProject",["ngResource","ui.router","satellizer"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").factory("Item",Item),Item.$inject=["$resource","API_URL"],angular.module("finalProject").controller("ItemsIndexController",ItemsIndexController).controller("ItemsShowController",ItemsShowController).controller("ItemsEditController",ItemsEditController),ItemsIndexController.$inject=["Item"],ItemsShowController.$inject=["Item","$state","$auth","User","Swap"],ItemsEditController.$inject=["Item","$state"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider","$locationProvider"],angular.module("finalProject").factory("Swap",Swap),Swap.$inject=["$resource","API_URL"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state","$auth"],UsersEditController.$inject=["User","$state"];
//# sourceMappingURL=app.js.map
