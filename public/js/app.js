"use strict";function Auth(e,t){e.loginUrl=t+"/login",e.signupUrl=t+"/register",e.tokenPrefix=""}function RegisterController(e,t,r){function o(){e.signup(s.user).then(function(){t.go("login")})}var s=this;if(s.user={},r.isLoggedIn=e.isAuthenticated,r.isLoggedIn()){var l=e.getPayload().id;t.go("itemsShow",{id:l})}s.submit=o}function LoginController(e,t){function r(){e.login(o.credentials).then(function(){t.go("itemsIndex")})}var o=this;o.credentials={},o.submit=r}function dragDrop(){var e=new FileReader;return{restrict:"E",replace:!0,templateUrl:"templates/dragDrop.html",scope:{base64:"="},link:function(t,r){t.base64=null,t.active=!1,e.onload=function(){t.base64=e.result,t.$apply()},r.on("dragover",function(){t.active=!0,t.$apply()}).on("dragover",function(e){e.preventDefault()}).on("dragleave",function(){t.active=!1,t.$apply()}).on("drop",function(t){t.preventDefault();var r=(t.target.files||t.dataTransfer.files)[0];e.readAsDataURL(r)})}}}function Item(e,t){return new e(t+"/items/:id",{id:"@id"},{update:{method:"PUT"}})}function ItemsIndexController(e){var t=this;t.all=e.query()}function ItemsShowController(e,t,r,o,s){function l(){return r.getPayload().id===parseFloat(t.params.id)}function n(){c.formVisible=!c.formVisible}function i(e){e.alreadyOffered||(c.newSwap.offer_id=e.id)}function a(){s.save(c.newSwap,function(e){console.log("saved swap:",e),t.go("requestsOffers")})}function u(){c.item.$remove(function(){t.go("itemsIndex")})}var c=this,d=r.getPayload().id;c.isCurrentUser=l,c.item=e.get(t.params),c.formVisible=!1,c.user=o.get({id:d}),e.get(t.params).$promise.then(function(e){c.item=e,o.get({id:d}).$promise.then(function(e){c.user=e,console.log("User current items:",c.user.item_ids),c.item.requests.forEach(function(e){if(c.user.item_ids.indexOf(e.offer_id)>-1){var t=c.user.items.map(function(e){return e.id}).indexOf(e.offer_id),r=c.user.items[t];r.alreadyOffered=!0}})}),c.newSwap={request_id:c.item.id,offer_id:null,accepted:null}}),c.selectOffer=i,c.toggleForm=n,c.createSwap=a,c.delete=u,c.isLoggedIn=r.isAuthenticated}function ItemsNewController(e,t,r){function o(){s.item.user_id=l,console.log(s.item),e.save(s.item,function(e){t.go("itemsIndex",{id:e.id})})}var s=this,l=r.getPayload().id;console.log(l),s.user=l,console.log(l),console.log(s.user),s.create=o,console.log(s.create)}function ItemsEditController(e,t){function r(){o.item.$update(function(){t.go("itemsShow",t.params)})}var o=this;o.item=e.get(t.params),this.update=r}function MainController(e,t,r,o){function s(){e.logout().then(function(){t.go("home")})}function l(r,o,s){(!e.isAuthenticated()&&a.includes(o.name)||"usersEdit"===o.name&&parseFloat(s.id)!==e.getPayload().id)&&(r.preventDefault(),t.go("home"))}var n=this;n.isLoggedIn=e.isAuthenticated,n.message=null;var i=e.getPayload();o.get(i,function(e){n.username=e.username});var a=["usersEdit"];r.$on("$stateChangeStart",l),n.logout=s}function RequestsOffersController(e,t,r,o,s,l){function n(e){t.delete(e,function(){u.currentUser=l.get({id:c})})}function i(e){e.accepted=!0,t.update(e)}function a(e){e.accepted=!1,t.update(e)}var u=this,c=o.getPayload().id;u.currentUser=l.get({id:c}),u.cancelRequest=n,u.acceptSwap=i,u.declineSwap=a}function RequestsOffers(e,t){return new e(t+"/swaps/:id",{id:"@id"},{update:{method:"PUT"}})}function Router(e,t,r){r.html5Mode(!0),e.state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("usersNew",{url:"/users/new",templateUrl:"/templates/usersNew.html",controller:"UsersNewController as usersNew"}).state("usersShow",{url:"/users/:id",templateUrl:"/templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("usersProfile",{url:"/users/:id/profile",templateUrl:"/templates/usersProfile.html",controller:"UsersProfileController as usersProfile"}).state("itemsIndex",{url:"/items",templateUrl:"/templates/itemsIndex.html",controller:"ItemsIndexController as itemsIndex"}).state("itemsNew",{url:"/items/new",templateUrl:"/templates/itemsNew.html",controller:"ItemsNewController as itemsNew"}).state("itemsShow",{url:"/items/:id",templateUrl:"/templates/itemsShow.html",controller:"ItemsShowController as itemsShow"}).state("itemsEdit",{url:"/items/:id/edit",templateUrl:"/templates/itemsEdit.html",controller:"ItemsEditController as itemsEdit"}).state("home",{url:"/",templateUrl:"/templates/home.html"}).state("requestsOffers",{url:"/requestsOffers",templateUrl:"/templates/requestsOffers.html",controller:"RequestsOffersController as requestsOffers"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}),t.otherwise("/")}function Swap(e,t){return new e(t+"/swaps/:id",{id:"@id"},{update:{method:"PUT"}})}function User(e,t){return new e(t+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}function UsersIndexController(e){var t=this;t.all=e.query()}function UsersShowController(e,t,r){function o(){return r.getPayload().id===parseFloat(t.params.id)}function s(){l.user.$remove(function(){t.go("usersIndex")})}var l=this;l.user=e.get(t.params),l.isCurrentUser=o,l.user=e.get(t.params),l.delete=s,l.isLoggedIn=r.isAuthenticated}function UsersProfileController(e,t,r){function o(){return r.getPayload().id===parseFloat(t.params.id)}var s=this;s.user=e.get(t.params),s.isCurrentUser=o,s.user=e.get(t.params)}function UsersEditController(e,t){function r(){o.user.$update(function(){t.go("usersShow",t.params)})}var o=this;o.user=e.get(t.params),this.update=r}angular.module("finalProject",["ngResource","ui.router","satellizer"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state","User"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").directive("dragDrop",dragDrop),angular.module("finalProject").factory("Item",Item),Item.$inject=["$resource","API_URL"],angular.module("finalProject").controller("ItemsIndexController",ItemsIndexController).controller("ItemsNewController",ItemsNewController).controller("ItemsShowController",ItemsShowController).controller("ItemsEditController",ItemsEditController),ItemsIndexController.$inject=["Item"],ItemsShowController.$inject=["Item","$state","$auth","User","Swap"],ItemsNewController.$inject=["Item","$state","$auth"],ItemsEditController.$inject=["Item","$state"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope","User"],angular.module("finalProject").controller("RequestsOffersController",RequestsOffersController),RequestsOffersController.$inject=["Item","Swap","$state","$auth","RequestsOffers","User"],angular.module("finalProject").factory("RequestsOffers",RequestsOffers),RequestsOffers.$inject=["$resource","API_URL"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider","$locationProvider"],angular.module("finalProject").factory("Swap",Swap),Swap.$inject=["$resource","API_URL"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController).controller("UsersProfileController",UsersProfileController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state","$auth"],UsersProfileController.$inject=["User","$state","$auth"],UsersEditController.$inject=["User","$state"];
//# sourceMappingURL=app.js.map
