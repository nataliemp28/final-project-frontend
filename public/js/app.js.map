{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/directives/dragDrop.js","js/models/item.js","js/controllers/items.js","js/controllers/main.js","js/controllers/requestsOffers.js","js/models/requestsOffers.js","js/router.js","js/models/swap.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","user","submit","signup","register","then","go","this","isLoggedIn","isAuthenticated","currentUserId","getPayload","id","LoginController","login","credentials","dragDrop","reader","FileReader","restrict","replace","templateUrl","scope","base64","link","$scope","element","active","onload","result","$apply","on","e","preventDefault","file","target","files","dataTransfer","readAsDataURL","Item","$resource","update","method","ItemsIndexController","itemsIndex","all","query","ItemsShowController","User","Swap","isCurrentUser","parseFloat","params","toggleForm","itemsShow","formVisible","selectOffer","item","alreadyOffered","newSwap","offer_id","createSwap","save","swap","console","log","deleteItem","$remove","get","$promise","data","item_ids","requests","forEach","request","indexOf","elementPos","items","map","x","objectFound","request_id","accepted","delete","ItemsNewController","create","itemsNew","user_id","currentUser","ItemsEditController","itemsEdit","$update","MainController","$rootScope","logout","secureState","toState","toParams","protectedStates","includes","name","main","message","res","username","$on","RequestsOffersController","RequestsOffers","cancelRequest","requestsOffersIndex","acceptSwap","declineSwap","Router","$stateProvider","$urlRouterProvider","$locationProvider","html5Mode","state","url","controller","otherwise","UsersIndexController","usersIndex","UsersShowController","deleteUser","usersShow","UsersProfileController","usersProfile","UsersEditController","usersEdit","angular","module","constant","config","$inject","directive","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state', 'User'];\nfunction RegisterController($auth, $state, user) {\n  const register = this;\n\n  register.user = {};\n  user.isLoggedIn = $auth.isAuthenticated;\n\n  if (user.isLoggedIn()) {\n    const currentUserId = $auth.getPayload().id;\n    $state.go('itemsShow', {id: currentUserId});\n  }\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('itemsIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n.directive('dragDrop', dragDrop);\nfunction dragDrop(){\n  const reader = new FileReader();\n  return{\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/dragDrop.html',\n    scope: {\n      base64: '='\n    },\n    link($scope, element){\n      // console.log(element);\n      $scope.base64 = null;\n      $scope.active = false;\n////////////////////\n      // $scope.message = 'Drag your image here';\n      // $scope.$watchGroup(['base64', 'src'], () => {\n      //   $scope.image = $scope.base64 || $scope.src;\n      // });\n///////////////////////////////\n      reader.onload = () => {\n        // console.log(reader.result);\n        $scope.base64 = reader.result;\n        $scope.$apply();\n      };\n      element\n      .on('dragover', () => {\n        $scope.active = true;\n        $scope.$apply();\n      })\n      .on('dragover', (e) =>{\n        e.preventDefault();\n        // console.log('success');\n      })\n      .on('dragleave', () => {\n        $scope.active = false;\n        $scope.$apply();\n      })\n      .on('drop', (e)=> {\n        e.preventDefault();\n        // console.log('over');\n        const file = (e.target.files || e.dataTransfer.files)[0];\n        reader.readAsDataURL(file); //turn into base64 url encoded\n      });\n    }\n  };\n}\n","angular.module('finalProject')\n  .factory('Item', Item);\n\nItem.$inject = ['$resource', 'API_URL'];\nfunction Item($resource, API_URL) {\n  return new $resource(`${API_URL}/items/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n.controller('ItemsIndexController', ItemsIndexController)\n.controller('ItemsNewController', ItemsNewController)\n.controller('ItemsShowController', ItemsShowController)\n.controller('ItemsEditController', ItemsEditController);\n\nItemsIndexController.$inject = ['Item'];\nfunction ItemsIndexController(Item) {\n  const itemsIndex = this;\n\n  itemsIndex.all = Item.query();\n}\n\nItemsShowController.$inject = ['Item', '$state', '$auth', 'User', 'Swap'];\nfunction ItemsShowController(Item, $state, $auth, User, Swap) {\n\n  const itemsShow = this;\n  const currentUserId = $auth.getPayload().id;\n\n  function isCurrentUser() {\n    return $auth.getPayload().id === parseFloat($state.params.id);\n  }\n  // get payload gives us current users id - user ID is IN TOKEN (BACKEND)\n  itemsShow.isCurrentUser = isCurrentUser;\n  itemsShow.item = Item.get($state.params);\n  itemsShow.formVisible = false;\n\n  function toggleForm() {\n    itemsShow.formVisible = itemsShow.formVisible ? false : true;\n  }\n\n  itemsShow.user = User.get({id: currentUserId});\n\n  Item.get($state.params).$promise.then((data) => {\n    itemsShow.item = data;\n\n    User.get({id: currentUserId}).$promise.then((data) => {\n      itemsShow.user = data;\n      \n\n      console.log('User current items:', itemsShow.user.item_ids);\n\n      itemsShow.item.requests.forEach(function(request) {\n\n        // If we've already offered this item before for the same thing then do this:\n        if(itemsShow.user.item_ids.indexOf(request.offer_id) > -1) {\n          const elementPos = itemsShow.user.items.map(function(x) {\n            return x.id;\n          }).indexOf(request.offer_id);\n          const objectFound = itemsShow.user.items[elementPos];\n          objectFound.alreadyOffered = true;\n        }\n      });\n    });\n\n    itemsShow.newSwap = {\n      request_id: itemsShow.item.id,\n      offer_id: null,\n      accepted: null\n    };\n  });\n\n  function selectOffer(item) {\n    if (!item.alreadyOffered) {\n      itemsShow.newSwap.offer_id = item.id;\n    }\n  }\n  function createSwap() {\n\n    Swap.save(itemsShow.newSwap, (swap) => {\n      console.log('saved swap:', swap);\n      $state.go('requestsOffers');\n    });\n  }\n  function deleteItem() {\n    itemsShow.item.$remove(() => {\n      $state.go('itemsIndex');\n    });\n  }\n  itemsShow.selectOffer = selectOffer;\n  itemsShow.toggleForm = toggleForm;\n  itemsShow.createSwap = createSwap;\n  itemsShow.delete = deleteItem;\n  itemsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\n\nItemsNewController.$inject = ['Item', '$state', '$auth'];\nfunction ItemsNewController(Item, $state, $auth) {\n\n  const itemsNew = this;\n  const currentUser = $auth.getPayload().id;\n\n  console.log(currentUser);\n  //\n  itemsNew.user = currentUser;\n\n  console.log(currentUser);\n\n  console.log(itemsNew.user);\n\n  function create() {\n    itemsNew.item.user_id = currentUser;\n    console.log(itemsNew.item);\n    Item.save(itemsNew.item, (item) => {\n      $state.go('itemsIndex', { id: item.id });\n    });\n  }\n  itemsNew.create = create;\n  console.log(itemsNew.create);\n}\n\nItemsEditController.$inject = ['Item', '$state'];\n\nfunction ItemsEditController(Item, $state) {\n  const itemsEdit = this;\n\n  itemsEdit.item = Item.get($state.params);\n\n  function update() {\n    itemsEdit.item.$update(() => {\n      $state.go('itemsShow', $state.params);\n    });\n  }\n  this.update = update;\n}\n","angular.module('finalProject')\n.controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope', 'User'];\nfunction MainController($auth, $state, $rootScope, User) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('home');\n    });\n  }\n\n  const user = $auth.getPayload();\n  // console.log(user);\n\n  User.get(user, ((res) => {\n    main.username = res.username;\n  })\n);\n\n  const protectedStates = ['usersEdit'];\n\n  function secureState(e, toState, toParams) {\n\n    if((!$auth.isAuthenticated() &&\n    protectedStates.includes(toState.name)) ||\n    toState.name === 'usersEdit' && (parseFloat(toParams.id) !== $auth.getPayload().id)) {\n      e.preventDefault();\n      $state.go('home');\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n\n}\n","angular.module('finalProject')\n.controller('RequestsOffersController', RequestsOffersController);\n\nRequestsOffersController.$inject = ['Item', 'Swap', '$state', '$auth', 'RequestsOffers', 'User'];\n\nfunction RequestsOffersController(Item, Swap, $state, $auth, RequestsOffers, User) {\n\n  const requestsOffersIndex = this;\n  const currentUserId = $auth.getPayload().id;\n\n  requestsOffersIndex.currentUser = User.get({id: currentUserId});\n\n  function cancelRequest(swap) {\n    Swap.delete(swap, () => {\n      requestsOffersIndex.currentUser = User.get({id: currentUserId});\n    });\n  }\n\n  function acceptSwap(swap) {\n    swap.accepted = true;\n    Swap.update(swap);\n  }\n\n  function declineSwap(swap) {\n    swap.accepted = false;\n    Swap.update(swap);\n  }\n\n  requestsOffersIndex.cancelRequest = cancelRequest;\n  requestsOffersIndex.acceptSwap = acceptSwap;\n  requestsOffersIndex.declineSwap = declineSwap;\n\n}\n","angular.module('finalProject')\n  .factory('RequestsOffers', RequestsOffers);\n\nRequestsOffers.$inject = ['$resource', 'API_URL'];\nfunction RequestsOffers($resource, API_URL) {\n  return new $resource(`${API_URL}/swaps/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider', '$locationProvider'];\nfunction Router($stateProvider, $urlRouterProvider, $locationProvider) {\n\n  $locationProvider.html5Mode(true);\n\n  $stateProvider\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('usersNew', {\n      url: '/users/new',\n      templateUrl: '/templates/usersNew.html',\n      controller: 'UsersNewController as usersNew'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('usersProfile', {\n      url: '/users/:id/profile',\n      templateUrl: '/templates/usersProfile.html',\n      controller: 'UsersProfileController as usersProfile'\n    })\n    .state('itemsIndex', {\n      url: '/items',\n      templateUrl: '/templates/itemsIndex.html',\n      controller: 'ItemsIndexController as itemsIndex'\n    })\n    .state('itemsNew', {\n      url: '/items/new',\n      templateUrl: '/templates/itemsNew.html',\n      controller: 'ItemsNewController as itemsNew'\n    })\n    .state('itemsShow', {\n      url: '/items/:id',\n      templateUrl: '/templates/itemsShow.html',\n      controller: 'ItemsShowController as itemsShow'\n    })\n    .state('itemsEdit', {\n      url: '/items/:id/edit',\n      templateUrl: '/templates/itemsEdit.html',\n      controller: 'ItemsEditController as itemsEdit'\n    })\n    .state('home', {\n      url: '/',\n      templateUrl: '/templates/home.html'\n    })\n    .state('requestsOffers', {\n      url: '/requestsOffers',\n      templateUrl: '/templates/requestsOffers.html',\n      controller: 'RequestsOffersController as requestsOffers'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    });\n\n  $urlRouterProvider.otherwise('/');\n}\n","angular.module('finalProject')\n  .factory('Swap', Swap);\n\nSwap.$inject = ['$resource', 'API_URL'];\nfunction Swap($resource, API_URL) {\n  return new $resource(`${API_URL}/swaps/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n.controller('UsersIndexController', UsersIndexController)\n.controller('UsersShowController', UsersShowController)\n.controller('UsersEditController', UsersEditController)\n.controller('UsersProfileController', UsersProfileController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n\n  const usersShow = this;\n  usersShow.user = User.get($state.params);\n\n  function isCurrentUser() {\n    return $auth.getPayload().id === parseFloat($state.params.id);\n  }\n\n  // get payload gives us current users id - user ID is IN TOKEN (BACKEND)\n  usersShow.isCurrentUser = isCurrentUser;\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nUsersProfileController.$inject = ['User', '$state', '$auth'];\nfunction UsersProfileController(User, $state, $auth) {\n\n  const usersProfile = this;\n  usersProfile.user = User.get($state.params);\n\n  function isCurrentUser() {\n    return $auth.getPayload().id === parseFloat($state.params.id);\n  }\n  // get payload gives us current users id - user ID is IN TOKEN (BACKEND)\n  usersProfile.isCurrentUser = isCurrentUser;\n  usersProfile.user = User.get($state.params);\n}\n\nUsersEditController.$inject = ['User', '$state'];\n\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n  this.update = update;\n}\n"]}