{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/directives/dragDrop.js","js/models/item.js","js/controllers/items.js","js/controllers/main.js","js/controllers/requestsOffers.js","js/models/requestsOffers.js","js/router.js","js/models/swap.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","User","submit","signup","register","user","then","go","this","isLoggedIn","isAuthenticated","currentUserId","getPayload","id","LoginController","$rootScope","login","credentials","$broadcast","dragDrop","reader","FileReader","restrict","replace","templateUrl","scope","base64","link","$scope","element","active","onload","result","$apply","on","e","preventDefault","file","target","files","dataTransfer","readAsDataURL","Item","$resource","update","method","ItemsIndexController","itemsIndex","all","query","ItemsShowController","Swap","isCurrentUser","parseFloat","params","toggleForm","itemsShow","formVisible","selectOffer","item","alreadyOffered","newSwap","offer_id","createSwap","save","swap","console","log","deleteItem","$remove","get","$promise","data","item_ids","requests","forEach","request","indexOf","elementPos","items","map","x","objectFound","request_id","accepted","delete","ItemsNewController","create","itemsNew","user_id","currentUser","ItemsEditController","itemsEdit","$update","MainController","getCurrentUser","main","logout","secureState","toState","toParams","protectedStates","includes","name","message","$on","RequestsOffersController","RequestsOffers","cancelRequest","requestsOffersIndex","acceptSwap","declineSwap","Router","$stateProvider","$urlRouterProvider","$locationProvider","html5Mode","state","url","controller","otherwise","UsersIndexController","usersIndex","UsersShowController","deleteUser","usersShow","UsersEditController","usersEdit","angular","module","constant","window","location","hostname","config","$inject","directive","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n   .constant('API_URL', window.location.hostname === 'localhost' ? 'http://localhost:3000/api' : '//natalie-wdi-final-project-api.herokuapp.com/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state', 'User'];\nfunction RegisterController($auth, $state, User) {\n  const register = this;\n\n  register.user = {};\n  User.isLoggedIn = $auth.isAuthenticated;\n\n  if (User.isLoggedIn()) {\n    const currentUserId = $auth.getPayload().id;\n    $state.go('itemsShow', {id: currentUserId});\n  }\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state', '$rootScope'];\nfunction LoginController($auth, $state, $rootScope) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $rootScope.$broadcast('loggedIn');\n        $state.go('itemsIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n.directive('dragDrop', dragDrop);\nfunction dragDrop(){\n  const reader = new FileReader();\n  return{\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/dragDrop.html',\n    scope: {\n      base64: '='\n    },\n    link($scope, element){\n      // console.log(element);\n      $scope.base64 = null;\n      $scope.active = false;\n////////////////////\n      // $scope.message = 'Drag your image here';\n      // $scope.$watchGroup(['base64', 'src'], () => {\n      //   $scope.image = $scope.base64 || $scope.src;\n      // });\n///////////////////////////////\n      reader.onload = () => {\n        // console.log(reader.result);\n        $scope.base64 = reader.result;\n        $scope.$apply();\n      };\n      element\n      .on('dragover', () => {\n        $scope.active = true;\n        $scope.$apply();\n      })\n      .on('dragover', (e) =>{\n        e.preventDefault();\n        // console.log('success');\n      })\n      .on('dragleave', () => {\n        $scope.active = false;\n        $scope.$apply();\n      })\n      .on('drop', (e)=> {\n        e.preventDefault();\n        // console.log('over');\n        const file = (e.target.files || e.dataTransfer.files)[0];\n        reader.readAsDataURL(file); //turn into base64 url encoded\n      });\n    }\n  };\n}\n","angular.module('finalProject')\n  .factory('Item', Item);\n\nItem.$inject = ['$resource', 'API_URL'];\nfunction Item($resource, API_URL) {\n  return new $resource(`${API_URL}/items/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n.controller('ItemsIndexController', ItemsIndexController)\n.controller('ItemsNewController', ItemsNewController)\n.controller('ItemsShowController', ItemsShowController)\n.controller('ItemsEditController', ItemsEditController);\n\nItemsIndexController.$inject = ['Item'];\nfunction ItemsIndexController(Item) {\n  const itemsIndex = this;\n\n  itemsIndex.all = Item.query();\n}\n\nItemsShowController.$inject = ['Item', '$state', '$auth', 'User', 'Swap'];\nfunction ItemsShowController(Item, $state, $auth, User, Swap) {\n\n  const itemsShow = this;\n  const currentUserId = $auth.getPayload().id;\n\n  function isCurrentUser() {\n    return $auth.getPayload().id === parseFloat($state.params.id);\n  }\n  // get payload gives us current users id - user ID is IN TOKEN (BACKEND)\n  itemsShow.isCurrentUser = isCurrentUser;\n  itemsShow.item = Item.get($state.params);\n  itemsShow.formVisible = false;\n\n  function toggleForm() {\n    itemsShow.formVisible = itemsShow.formVisible ? false : true;\n  }\n\n  itemsShow.user = User.get({id: currentUserId});\n\n  Item.get($state.params).$promise.then((data) => {\n    itemsShow.item = data;\n\n    User.get({id: currentUserId}).$promise.then((data) => {\n      itemsShow.user = data;\n      \n\n      console.log('User current items:', itemsShow.user.item_ids);\n\n      itemsShow.item.requests.forEach(function(request) {\n\n        // If we've already offered this item before for the same thing then do this:\n        if(itemsShow.user.item_ids.indexOf(request.offer_id) > -1) {\n          const elementPos = itemsShow.user.items.map(function(x) {\n            return x.id;\n          }).indexOf(request.offer_id);\n          const objectFound = itemsShow.user.items[elementPos];\n          objectFound.alreadyOffered = true;\n        }\n      });\n    });\n\n    itemsShow.newSwap = {\n      request_id: itemsShow.item.id,\n      offer_id: null,\n      accepted: null\n    };\n  });\n\n  function selectOffer(item) {\n    if (!item.alreadyOffered) {\n      itemsShow.newSwap.offer_id = item.id;\n    }\n  }\n  function createSwap() {\n\n    Swap.save(itemsShow.newSwap, (swap) => {\n      console.log('saved swap:', swap);\n      $state.go('requestsOffers');\n    });\n  }\n  function deleteItem() {\n    itemsShow.item.$remove(() => {\n      $state.go('itemsIndex');\n    });\n  }\n  itemsShow.selectOffer = selectOffer;\n  itemsShow.toggleForm = toggleForm;\n  itemsShow.createSwap = createSwap;\n  itemsShow.delete = deleteItem;\n  itemsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\n\nItemsNewController.$inject = ['Item', '$state', '$auth'];\nfunction ItemsNewController(Item, $state, $auth) {\n\n  const itemsNew = this;\n  const currentUser = $auth.getPayload().id;\n\n  console.log(currentUser);\n  //\n  itemsNew.user = currentUser;\n\n  console.log(currentUser);\n\n  console.log(itemsNew.user);\n\n  function create() {\n    itemsNew.item.user_id = currentUser;\n    console.log(itemsNew.item);\n    Item.save(itemsNew.item, (item) => {\n      $state.go('itemsIndex', { id: item.id });\n    });\n  }\n  itemsNew.create = create;\n  console.log(itemsNew.create);\n}\n\nItemsEditController.$inject = ['Item', '$state'];\n\nfunction ItemsEditController(Item, $state) {\n  const itemsEdit = this;\n\n  itemsEdit.item = Item.get($state.params);\n\n  function update() {\n    itemsEdit.item.$update(() => {\n      $state.go('itemsShow', $state.params);\n    });\n  }\n  this.update = update;\n}\n","angular.module('finalProject')\n.controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope', 'User'];\nfunction MainController($auth, $state, $rootScope, User) {\n\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  // main.userId = $auth.getPayload().id;\n  main.message = null;\n\n  function getCurrentUser() {\n    if ($auth.getPayload()) {\n      User.get({ id: $auth.getPayload().id }, (user) => {\n        main.currentUser = user;\n      });\n    }\n  }\n  getCurrentUser();\n\n  $rootScope.$on('loggedIn', getCurrentUser);\n\n  function logout() {\n    main.currentUser = null;\n    $auth.logout()\n    .then(() => {\n      $state.go('home');\n    });\n  }\n\n  const protectedStates = ['usersEdit', 'usersShow', 'usersIndex', 'usersProfile', 'itemsShow', 'itemsNew', 'itemsIndex'];\n\n  function secureState(e, toState, toParams) {\n\n    if((!$auth.isAuthenticated() &&\n    protectedStates.includes(toState.name)) ||\n    toState.name === 'usersEdit' && (parseFloat(toParams.id) !== $auth.getPayload().id)) {\n      e.preventDefault();\n      $state.go('home');\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n\n}\n","angular.module('finalProject')\n.controller('RequestsOffersController', RequestsOffersController);\n\nRequestsOffersController.$inject = ['Item', 'Swap', '$state', '$auth', 'RequestsOffers', 'User'];\n\nfunction RequestsOffersController(Item, Swap, $state, $auth, RequestsOffers, User) {\n\n  const requestsOffersIndex = this;\n  const currentUserId = $auth.getPayload().id;\n\n\n  requestsOffersIndex.currentUser = User.get({id: currentUserId});\n\n  function cancelRequest(swap) {\n    Swap.delete(swap, () => {\n      requestsOffersIndex.currentUser = User.get({id: currentUserId});\n    });\n  }\n\n  function acceptSwap(swap) {\n    swap.accepted = true;\n    Swap.update(swap);\n  }\n\n  function declineSwap(swap) {\n    swap.accepted = false;\n    Swap.update(swap);\n  }\n\n  requestsOffersIndex.cancelRequest = cancelRequest;\n  requestsOffersIndex.acceptSwap = acceptSwap;\n  requestsOffersIndex.declineSwap = declineSwap;\n\n}\n","angular.module('finalProject')\n  .factory('RequestsOffers', RequestsOffers);\n\nRequestsOffers.$inject = ['$resource', 'API_URL'];\nfunction RequestsOffers($resource, API_URL) {\n  return new $resource(`${API_URL}/swaps/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider', '$locationProvider'];\nfunction Router($stateProvider, $urlRouterProvider, $locationProvider) {\n\n  $locationProvider.html5Mode(true);\n\n  $stateProvider\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('usersNew', {\n      url: '/users/new',\n      templateUrl: '/templates/usersNew.html',\n      controller: 'UsersNewController as usersNew'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('itemsIndex', {\n      url: '/items',\n      templateUrl: '/templates/itemsIndex.html',\n      controller: 'ItemsIndexController as itemsIndex'\n    })\n    .state('itemsNew', {\n      url: '/items/new',\n      templateUrl: '/templates/itemsNew.html',\n      controller: 'ItemsNewController as itemsNew'\n    })\n    .state('itemsShow', {\n      url: '/items/:id',\n      templateUrl: '/templates/itemsShow.html',\n      controller: 'ItemsShowController as itemsShow'\n    })\n    .state('itemsEdit', {\n      url: '/items/:id/edit',\n      templateUrl: '/templates/itemsEdit.html',\n      controller: 'ItemsEditController as itemsEdit'\n    })\n    .state('home', {\n      url: '/',\n      templateUrl: '/templates/home.html'\n    })\n    .state('requestsOffers', {\n      url: '/requestsOffers',\n      templateUrl: '/templates/requestsOffers.html',\n      controller: 'RequestsOffersController as requestsOffers'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    });\n\n  $urlRouterProvider.otherwise('/');\n}\n","angular.module('finalProject')\n  .factory('Swap', Swap);\n\nSwap.$inject = ['$resource', 'API_URL'];\nfunction Swap($resource, API_URL) {\n  return new $resource(`${API_URL}/swaps/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n.controller('UsersIndexController', UsersIndexController)\n.controller('UsersShowController', UsersShowController)\n.controller('UsersEditController', UsersEditController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n\n  const usersShow = this;\n  usersShow.user = User.get($state.params);\n\n  function isCurrentUser() {\n    return $auth.getPayload().id === parseFloat($state.params.id);\n  }\n\n  // get payload gives us current users id - user ID is IN TOKEN (BACKEND)\n  usersShow.isCurrentUser = isCurrentUser;\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nUsersEditController.$inject = ['User', '$state'];\n\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n  this.update = update;\n}\n"]}